plugins {
	id 'org.springframework.boot' version '2.3.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'jacoco'
}

apply plugin: 'groovy'

group = 'ningenme.net'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	jcenter()
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDirs = ['src/main/resources','src/main/java/']
        }
    }
}

dependencies {
	//main
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//validation
	implementation 'javax.validation:validation-api:2.0.0.Final'
	//lombok
	compileOnly "org.projectlombok:lombok:1.18.12"
	annotationProcessor "org.projectlombok:lombok:1.18.12"
	//swagger
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	implementation 'io.springfox:springfox-core:2.9.2'
	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	//dto
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//mysql	
	implementation 'mysql:mysql-connector-java:8.0.21'
	//mybatis
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.0.0'
	//test
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	//groovy
	testImplementation "org.spockframework:spock-spring:1.3-groovy-2.5"
	testImplementation "org.spockframework:spock-core:1.3-groovy-2.5"
	testImplementation "org.codehaus.groovy:groovy-all:2.5.6"
}

test {
	useJUnitPlatform()
	finalizedBy(jacocoTestReport)
}

jacoco {
	toolVersion = "0.8.4"
//	reportsDir  = file("$buildDir/reports/jacoco")
	reportsDir  = file("$buildDir/reports/jacoco")
}

def coverageExcludeFiles = ['**/*Application**']

jacocoTestReport {
	reports {
		html.enabled = true
	}
	afterEvaluate {
		getClassDirectories().setFrom(classDirectories.files.collect {
			fileTree(
					dir: it,
					exclude: coverageExcludeFiles)
		})
	}
}